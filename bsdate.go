package bsdate

import "errors"

type Date interface {
	GetDay() int
	GetMonth() int
	GetYear() int
}
type date struct {
	Day        int
	Month      int
	Year       int
	MonthNames [12]string
}


// nepali year : day in Paush for 1st Jan, no of days in Baisakh, no of days in Jestha, no of days in Ashadh, ..
var calendardata = map[int][13]int {
	1970: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	1971: [13]int{18, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30},
	1972: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
	1973: [13]int{19, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	1974: [13]int{19, 31, 31, 32, 30, 31, 31, 30, 29, 30, 29, 30, 30},
	1975: [13]int{18, 31, 31, 32, 32, 30, 31, 30, 29, 30, 29, 30, 30},
	1976: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	1977: [13]int{18, 31, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31},
	1978: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	1979: [13]int{18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	1980: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	1981: [13]int{18, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
	1982: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	1983: [13]int{18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	1984: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	1985: [13]int{18, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
	1986: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	1987: [13]int{18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	1988: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	1989: [13]int{18, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
	1990: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	1991: [13]int{18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30},

	//this data are from http://nepalicalendar.rat32.com/index.php
	1992: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	1993: [13]int{18, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
	1994: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	1995: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
	1996: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	1997: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	1998: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	1999: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2000: [13]int{17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	2001: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2002: [13]int{18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2003: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2004: [13]int{17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	2005: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2006: [13]int{18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2007: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2008: [13]int{17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31},
	2009: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2010: [13]int{18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2011: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2012: [13]int{17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
	2013: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2014: [13]int{18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2015: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2016: [13]int{17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
	2017: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2018: [13]int{18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2019: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	2020: [13]int{17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
	2021: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2022: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
	2023: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	2024: [13]int{17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
	2025: [13]int{18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2026: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2027: [13]int{17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	2028: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2029: [13]int{18, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30},
	2030: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 30, 30, 30, 31},
	2031: [13]int{17, 31, 32, 31, 32, 31, 31, 31, 31, 31, 31, 31, 31},
	2032: [13]int{17, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32},
	2033: [13]int{18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2034: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2035: [13]int{17, 30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31},
	2036: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2037: [13]int{18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2038: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2039: [13]int{17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
	2040: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2041: [13]int{18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2042: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2043: [13]int{17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
	2044: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2045: [13]int{18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2046: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2047: [13]int{17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
	2048: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2049: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
	2050: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	2051: [13]int{17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
	2052: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2053: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
	2054: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	2055: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 29, 30},
	2056: [13]int{17, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30},
	2057: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2058: [13]int{17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	2059: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2060: [13]int{17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2061: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2062: [13]int{17, 30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31},
	2063: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2064: [13]int{17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2065: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2066: [13]int{17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31},
	2067: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2068: [13]int{17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2069: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2070: [13]int{17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30},
	2071: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2072: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2073: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31},
	2074: [13]int{17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
	2075: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2076: [13]int{16, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},
	2077: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31},
	2078: [13]int{17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30},
	2079: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30},
	2080: [13]int{16, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30},

	//this data are from http://www.ashesh.com.np/nepali-calendar/
	2081: [13]int{17, 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30},
	2082: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30},
	2083: [13]int{17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30},
	2084: [13]int{17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30},
	2085: [13]int{17, 31, 32, 31, 32, 31, 31, 30, 30, 29, 30, 30, 30},
	2086: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30},
	2087: [13]int{16, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30},
	2088: [13]int{16, 30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30},
	2089: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30},
	2090: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30},
	2091: [13]int{16, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30},
	2092: [13]int{16, 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30},
	2093: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30},
	2094: [13]int{17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30},
	2095: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 30, 30},
	2096: [13]int{17, 30, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30},
	2097: [13]int{17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30},
	2098: [13]int{17, 31, 31, 32, 31, 31, 31, 29, 30, 29, 30, 30, 31},
	2099: [13]int{17, 31, 31, 32, 31, 31, 31, 30, 29, 29, 30, 30, 30},
	2100: [13]int{17, 31, 32, 31, 32, 30, 31, 30, 29, 30, 29, 30, 30},
}

var MonthNames = [12]string{
	"Baisakh", "Jestha", "Ashadh", "Shrawan", "Bhadra", "Ashwin", "Kartik",
	"Mangsir", "Paush", "Mangh", "Falgun", "Chaitra",
}

func New(Day int, Month interface{}, Year int) (Date, error) {
	var MonthInt int
	switch Month.(type) {
	case string:
		for i, v := range MonthNames {
			if v == Month.(string) {
				MonthInt = i + 1
				break
			}
		}
	case int:
		MonthInt = Month.(int)
	default:
		return nil, errors.New("month has to be of value int or string")
	}
	d := date{
		Day:   Day,
		Month: MonthInt,
		Year:  Year,
	}
	if !d.isValid() {
		return nil, errors.New("not a valid date")
	}
	return d, nil
}

func (d date) GetDay() int {
	return d.Day
}

func (d date) GetMonth() int {
	return d.Month
}

func (d date) GetYear() int {
	return d.Year
}
func (d date) isValid() bool {
	//some rough testing
	if d.Day <= 0 || d.Day > 32 || d.Month <= 0 || d.Month > 12 || d.Year <= 0 {
		return false
	}
	//do we have data of that year?
	if _, ok := calendardata[d.Year]; !ok {
		return false
	}
	//does that particular month have so many days?
	if d.Day > calendardata[d.Year][d.Month] {
		return false
	}
	return true
}
